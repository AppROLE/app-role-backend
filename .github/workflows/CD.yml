name: CD AWS

on:
  push:
    branches:
      - dev
      - homolog
      - prod

  workflow_dispatch:

jobs:
  DeployToAWS:
    environment:
      name: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v2
      - name: Setup AWS Credentials
        run: |
          echo "Configuring AWS Credentials"
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws configure set default.output json

      - name: Setting stage and stack name
        run: |
          echo "STAGE=${{ github.ref_name }}" 
          echo "STACK_NAME=AppRoleStack${{github.ref_name}}" >> $GITHUB_ENV
          echo AWS_REGION=${{ secrets.AWS_REGION }}>> $GITHUB_ENV
          echo MONGO_URI=${{ secrets.MONGO_URI }} >> $GITHUB_ENV
          echo BUCKET_NAME=${{ secrets.BUCKET_NAME }} >> $GITHUB_ENV
          echo USER_POOL_ARN=${{ secrets.USER_POOL_ARN }} >> $GITHUB_ENV
          echo USER_POOL_ID=${{ secrets.USER_POOL_ID }} >> $GITHUB_ENV
          echo APP_CLIENT_ID=${{ secrets.APP_CLIENT_ID }} >> $GITHUB_ENV
          echo USER_POOL_NAME=${{ secrets.USER_POOL_NAME }} >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Installing Dependencies
        run: |
          yarn
          cd iac
          npm install -g aws-cdk ts-node
          npm i

      - name: CDK Bootstrap
        run: |
          echo "CDK Bootstrap"
          cd iac
          aws cloudformation describe-stacks --stack-name CDKToolkit 2>&1 > /dev/null || \
            cdk bootstrap aws://${{ secrets.AWS_ACCOUNT_ID }}/sa-east-1

      - name: DeployWithCDK
        run: |
          source $GITHUB_ENV
          yarn build
          cd iac
          ts-node node_modules_adjust.ts
          ts-node adjust_shared_layer.ts
          cdk synth
          cdk bootstrap
          cdk deploy "${{env.STACK_NAME}}" --require-approval never

        env:
          STAGE: ${{ github.ref_name }}
          STACK_NAME: ${{ env.STACK_NAME }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          USER_POOL_ARN: ${{ secrets.USER_POOL_ARN }}
          USER_POOL_NAME: ${{ secrets.USER_POOL_NAME }}
          USER_POOL_ID: ${{ secrets.USER_POOL_ID }}
          APP_CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
